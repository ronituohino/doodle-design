version: '3.8'

# development Docker services
services:
  client:
    image: client
    container_name: client
    build: ./client
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    environment:
      # use localhost here because client-side fetching occurs in browser, not inside container
      - REACT_APP_BACKEND_URL=http://localhost:4000
      - CHOKIDAR_USEPOLLING=true
      - BROWSER=none
      - PORT=3000

  admin:
    image: admin
    container_name: admin
    build: ./admin
    ports:
      - 127.0.0.1:3050:3050
    volumes:
      - ./admin:/app
      - admin_node_modules:/app/node_modules
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:4000
      - CHOKIDAR_USEPOLLING=true
      - BROWSER=none
      - PORT=3050

  server:
    image: server
    container_name: server
    build: ./server
    ports:
      - 127.0.0.1:4000:4000
    volumes:
      - ./server:/app
      - server_node_modules:/app/node_modules
    environment:
      - JWT_SECRET=faesf40f98uep9asuifghp9s8eh
      - DB_URI=mongodb://the_username:the_password@mongo:27017/store

  # local mongo database with initial values
  # defined in mongo/mongo-init.js
  mongo:
    image: mongo:5.0.6@sha256:b0abf19259902648be5ac17479dd4c65e037c3292c9eb09181f087687bca5102
    container_name: mongo
    command:
      - --logpath
      - /var/log/mongodb/mongod.log
    ports:
      - 127.0.0.1:27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=store
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo/mongo_data:/data/db

volumes:
  client_node_modules:
  admin_node_modules:
  server_node_modules:
